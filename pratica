//Inclui as bibliotecas do SPI e do RC522
#include <SPI.h>
#include <MFRC522.h>

//Definição dos pinos de conexão do projeto
#define PINO_SS 9
#define PINO_RST 8

//define pinos dos leds
int ledVermelho = 11;
int ledVerde = 12;
int buzzer = 13;
int contador = 1;

//Cria o item para configurar o módulo RC522
MFRC522 mfrc522(PINO_SS, PINO_RST);

void setup() {
  Serial.begin(9600); // Inicializa a serial
  SPI.begin();// Inicializa a comunicação SPI
  mfrc522.PCD_Init(); // Inicializa o módulo MFRC522
  Serial.println("Sistema Inicializado: Aproxime o token");

  pinMode(ledVermelho, OUTPUT);
  pinMode(ledVerde, OUTPUT);
  pinMode(buzzer, OUTPUT);
}

void pisca(int led, int tempo, float freq) { 
  //tempo em segundo, frequen em piscadas/s
  int periodo = (1.0/freq)*1000;
  
  for (int i=0;i<=tempo*freq;i++){
    digitalWrite(led, LOW);
    delay(periodo/2);
    digitalWrite(led, HIGH);
    delay(periodo/2);
    }
  

}
void idCorreto() {
  digitalWrite(ledVermelho, LOW);
  digitalWrite(ledVerde, HIGH);
  Serial.println("Acesso Permitido!");
  contador = 1;
  delay(10000);
  digitalWrite(ledVerde, LOW);

}

void idIncorreto() {
  Serial.println("Cartão Inválido!");
  contador += 1;
  Serial.println(String(6-contador) + " tentativas restantes.");
  pisca(ledVermelho,4,1);
}

void sistemaBloqueado() {
    Serial.println("SISTEMA BLOQUEADO!");
    digitalWrite(ledVermelho, LOW);
    delay(500);
    digitalWrite(buzzer, HIGH);
    pisca(ledVermelho,30,20);
    digitalWrite(buzzer, LOW);
  }

String escreveUID() {
  Serial.print("UID da tag:"); // Mostra UID do token na serial
  String conteudo = ""; //Cria uma variável vazia, do tipo string

  byte letra;
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    if (mfrc522.uid.uidByte[i] < 0x10) {
      Serial.print(" 0");
    }
    else {
      Serial.print(" ");
    }
    Serial.print(mfrc522.uid.uidByte[i], HEX);// Printa a mensagem convertida em hexadecimal
    if (mfrc522.uid.uidByte[i] < 0x10) {
      conteudo.concat(String(" 0"));
    }
    else {
      conteudo.concat(String(" "));
    }
    conteudo.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  Serial.println();
  conteudo.toUpperCase();//Coloca todas as letras da string em maiúscula

  return conteudo.substring(1);
}

void loop() {
  // put your main code here, to run repeatedly:
  digitalWrite(ledVermelho, HIGH);

  if (!mfrc522.PICC_IsNewCardPresent()) return;// Aguarda a aproximação do token
  if (!mfrc522.PICC_ReadCardSerial()) return; // Seleciona qual token vai ser utilizado

  String UID = escreveUID();

  if (UID == "50 62 AF 4C") {
    idCorreto();
  } else if (contador < 5) {
    idIncorreto();
  } else {
    sistemaBloqueado();
  }
  delay(1000);
}
